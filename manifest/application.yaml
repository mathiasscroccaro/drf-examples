apiVersion: apps/v1
kind: Deployment
metadata:
  name: drf-example
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drf-example
  template:
    metadata:
      labels:
        app: drf-example
    spec:
      containers:
        - name: drf-example
          image: localhost:32000/drf-example
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: drf-example-volume
              mountPath: /mnt
      volumes:
        - name: drf-example-volume
          persistentVolumeClaim:
            claimName: drf-example-hdd

---
apiVersion: v1
kind: Service
metadata:
  name: drf-example
spec:
  selector:
    app: drf-example
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/server-snippet: |
        location /drf-example/ {
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header Host $http_host;
            proxy_set_header X-Script-Name /drf-example;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://app.mathias.dev.br/;
        }
  name: drf-example-ingress
spec:
  rules:
    - host: app.mathias.dev.br
      http:
        paths:
          - path: /drf-example(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: drf-example
                port:
                  number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drf-example-hdd
spec:
  storageClassName: external-hdd-hostpath
  accessModes: [ReadWriteOnce]
  resources: { requests: { storage: 1Gi } }